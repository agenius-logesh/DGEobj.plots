% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QCplots.R
\name{QCplots}
\alias{QCplots}
\title{Create QC metric plots}
\usage{
QCplots(
  DGEdata,
  metricNames,
  plotType = "canvasXpress",
  plotCategory = "bar",
  labelAngle = 30,
  hlineSD = 3,
  winsorize = TRUE
)
}
\arguments{
\item{DGEdata}{A DGEobj object with an item of type "alignQC"}

\item{metricNames}{A list of metrics to plot. Values must exist in column names of the item
of type AlignQC.}

\item{plotType}{Plot type must be canvasXpress or ggplot (default = canvasXpress).}

\item{plotCategory}{One of "bar", "point", "pointline" or "histogram". For a different
plot type for each metric, pass a list of plotCategories with length equal to
length(metricNames). (default = "bar")}

\item{labelAngle}{Angle (0 - 90) to set the sample labels on the X axis (default = 30).
Does not apply to histograms.}

\item{hlineSD}{Draw two reference lines: 1) at the median value 2) the number of
SDs defined by the value of hlineSD. (default = 3). Set to 0 to disable the reference lines.}

\item{winsorize}{This implements a robust method to calculate standard
deviations.  It is used to calculate the standard deviation for the
placement of horizontal reference lines (hlineSD argument).  The adaptive
winsorization used here only trims extreme values when normality is
violated. See https://www.r-bloggers.com/winsorization/ for details.
(default = TRUE).}
}
\value{
canvasXpress or ggplot object if one plot is specified.
A list of canvasXpress or ggplot objects if 2 or more metrics specified.
}
\description{
Takes a DGEobject which has an item of type "alignQC" (qcdata).
}
\details{
qcdata is a dataframe with metric names as column names and samples as row name.

Returns a list of QC plots for the metricNames provided as input.

By default, horizontal reference lines are drawn at the median and +/- n SDs based on the
hlineSD argument. These are statistical reference points, NOT pass/fail limits.
}
\examples{
\dontrun{
  someFaveMetrics <- c("Alignment_MappedRate",
                       "Alignment_PairedRate",
                       "Source_rRNA",
                       "Strand_Read1AntiSense",
                       "Strand_ReadPairAntiSense",
                       "Profile_ExonRate",
                       "Profile_InterGene_FPK")
  # All defaults
  MyQCplots <- QCplots(qcdata, metricNames = someFaveMetrics)
  # Draw the first plot
  print(MyQCplots[[1]])

  # ggplot example
  MyQCplots <- QCplots(t_obj1, metricNames = someFaveMetrics, plotType = "ggplot")
  print(MyQCplots[[1]])
}

}
